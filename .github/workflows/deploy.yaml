name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - '.github/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@a22cf08638b34d5badda920f9daf6e72c477b07b # v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl,x86_64-pc-windows-gnu

      - name: Cache dependencies
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools mingw-w64
        if: ${{ steps.tag_version.outputs.new_tag != null }}

      - name: Build Linux binary
        id: compile_linux
        run: |
          cargo build --release --target x86_64-unknown-linux-musl
          mkdir -p dist
          cp target/x86_64-unknown-linux-musl/release/cleaner dist/cleaner-linux-x64
          cd dist
          tar -cJf cleaner-linux-x64.tar.xz cleaner-linux-x64
          sha256sum cleaner-linux-x64.tar.xz > cleaner-linux-x64.tar.xz.sha256
          echo "BUILT_ARCHIVE=$(pwd)/cleaner-linux-x64.tar.xz" >> $GITHUB_OUTPUT
          echo "BUILT_CHECKSUM=$(pwd)/cleaner-linux-x64.tar.xz.sha256" >> $GITHUB_OUTPUT
        if: ${{ steps.tag_version.outputs.new_tag != null }}

      - name: Build Windows binary
        id: compile_windows
        run: |
          cargo build --release --target x86_64-pc-windows-gnu
          mkdir -p dist
          cp target/x86_64-pc-windows-gnu/release/cleaner.exe dist/cleaner-windows-x64.exe
          cd dist
          zip cleaner-windows-x64.zip cleaner-windows-x64.exe
          sha256sum cleaner-windows-x64.zip > cleaner-windows-x64.zip.sha256
          echo "BUILT_ARCHIVE=$(pwd)/cleaner-windows-x64.zip" >> $GITHUB_OUTPUT
          echo "BUILT_CHECKSUM=$(pwd)/cleaner-windows-x64.zip.sha256" >> $GITHUB_OUTPUT
        if: ${{ steps.tag_version.outputs.new_tag != null }}

      - name: Create Release
        uses: ncipollo/release-action@bcfe5470707e8832e12347755757cec0eb3c22af # v1.18.0
        with:
          allowUpdates: true
          artifactErrorsFailBuild: true
          makeLatest: true
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "\
            ${{ steps.compile_linux.outputs.BUILT_ARCHIVE }},\
            ${{ steps.compile_linux.outputs.BUILT_CHECKSUM }},\
            ${{ steps.compile_windows.outputs.BUILT_ARCHIVE }},\
            ${{ steps.compile_windows.outputs.BUILT_CHECKSUM }}"
        if: ${{ steps.tag_version.outputs.new_tag != null }}
